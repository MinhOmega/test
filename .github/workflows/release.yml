name: Release

on:
  push:
    branches:
      - dev
      - staging
      - main

jobs:
  release:
    name: Release on ${{ github.ref_name }}
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Required to create GitHub releases

    env:
      NODE_VERSION: 20
      PNPM_VERSION: 8
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint

      - name: Set release variables
        id: vars
        run: |
          BRANCH="${GITHUB_REF##*/}"
          case "$BRANCH" in
            dev)
              echo "RELEASE_CMD=pnpm release-it --ci --git.requireBranch=dev --preRelease=beta --git.commitMessage='chore: dev release v\${version}' --github.releaseName='[DEV] Release v\${version}' --github.preRelease=true" >> "$GITHUB_ENV"
              ;;
            staging)
              echo "RELEASE_CMD=pnpm release-it --ci --git.requireBranch=staging --preRelease=rc --git.commitMessage='chore: staging release v\${version}' --github.releaseName='[STAGING] Release v\${version}' --github.preRelease=true" >> "$GITHUB_ENV"
              ;;
            main)
              echo "RELEASE_CMD=pnpm release-it --ci --git.requireBranch=main --git.commitMessage='chore: release v\${version}' --github.releaseName='Release v\${version}'" >> "$GITHUB_ENV"
              ;;
            *)
              echo "Branch $BRANCH is not supported for release." && exit 1
              ;;
          esac

      - name: Build project
        run: pnpm build

      - name: Run Release
        run: $RELEASE_CMD
