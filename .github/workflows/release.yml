name: Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release Type"
        required: true
        default: "production"
        type: choice
        options:
          - production
          - staging
          - dev

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Configure Git
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Production Release
        if: ${{ github.event.inputs.release_type == 'production' }}
        run: pnpm ci:release:production
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Staging Release
        if: ${{ github.event.inputs.release_type == 'staging' }}
        run: pnpm ci:release:staging
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Development Release
        if: ${{ github.event.inputs.release_type == 'dev' }}
        run: pnpm ci:release:dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}